{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App, { Container } from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport NextNprogress from '../components/ProgressBar';\nconst initState = {\n  name: '',\n  number: 0\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE_NAME':\n      return _objectSpread({}, state, {\n        name: action.payload\n      });\n\n    case 'CHANGE_NUMBER':\n      return _objectSpread({}, state, {\n        number: state.number + action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst makeStore = () => {\n  return createStore(reducer, initState);\n};\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      store\n    } = this.props;\n    return __jsx(Container, null, __jsx(NextNprogress, null), __jsx(Provider, {\n      store: store\n    }, __jsx(Component, null)));\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/jacklin/Documents/echat/src/pages/_app.js"],"names":["React","createStore","Provider","App","Container","withRedux","NextNprogress","initState","name","number","reducer","state","action","type","payload","makeStore","MyApp","render","Component","store","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,EADQ;AAEdC,EAAAA,MAAM,EAAE;AAFM,CAAlB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,+BACOF,KADP;AAEIH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAFjB;;AAIJ,SAAK,eAAL;AACI,+BACOH,KADP;AAEIF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,GAAeG,MAAM,CAACE;AAFlC;;AAIJ;AACI,aAAOH,KAAP;AAZR;AAcH,CAfD;;AAkBA,MAAMI,SAAS,GAAG,MAAM;AACpB,SAAOd,WAAW,CAACS,OAAD,EAAUH,SAAV,CAAlB;AACH,CAFD;;AAIA,MAAMS,KAAN,SAAoBb,GAApB,CAAwB;AAGpBc,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAuB,KAAKC,KAAlC;AACA,WACI,MAAC,SAAD,QACI,MAAC,aAAD,OADJ,EAEI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED;AAAjB,OACI,MAAC,SAAD,OADJ,CAFJ,CADJ;AAQH;;AAbmB;;AAiBxB,eAAed,SAAS,CAACU,SAAD,CAAT,CAAqBC,KAArB,CAAf","sourcesContent":["import React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App, { Container } from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport NextNprogress from '../components/ProgressBar';\n\nconst initState = {\n    name: '',\n    number: 0,\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE_NAME':\n            return {\n                ...state,\n                name: action.payload\n            }\n        case 'CHANGE_NUMBER':\n            return {\n                ...state,\n                number: state.number + action.payload\n            }\n        default:\n            return state\n    }\n};\n\n\nconst makeStore = () => {\n    return createStore(reducer, initState);\n};\n\nclass MyApp extends App {\n\n\n    render() {\n        const { Component, store } = this.props;\n        return (\n            <Container>\n                <NextNprogress/>\n                <Provider store={store}>\n                    <Component />\n                </Provider>\n            </Container>\n        );\n    }\n\n}\n\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}